<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Wololo</title>
    <link>http://chandrewz.github.io</link>
    <description>code, work, webdev</description>
    <atom:link href="http://chandrewz.github.io/blog/atom.xml" rel="self" type="application/rss+xml" />
    
       
    
       
        <item>
          <title>Set up and run Selenium on CentOS</title>
          <description><![CDATA[<p>Getting Selenium + Chrome + CentOS up was an absolute nightmare. I give up on Chrome and  ChromeDriver. I had Selenium and Chrome working locally on my Mac, but the exact steps just do not rollover. After hours, I switched over to Firefox and it worked in 5 minutes. No additional driver needed either.</p>
<p>Here&#39;s my steps for running Selenium WebDriver in PHP on CentOS 7, using <em>Firefox</em>. I had a fresh server with nothing installed. You&#39;ll want to check out the repo (<a href="https://github.com/facebook/php-webdriver">facebook/php-webdriver</a>) and get things running locally before proceeding.</p>
<h3>Check version of CentOS</h3><p>I used an older server running CentOS 5 and ran into complications, so I made sure I was on CentOS 7.</p>
<pre><code>$ cat /etc/redhat-release
CentOS Linux release 7.2.1511 (Core)
</code></pre><h3>Install Java &amp; PHP on CentOS</h3><p>Skip this if Java and PHP are installed. Make sure you have root privileges as well.</p>
<h4>Java</h4><pre><code>$ yum install java-1.7.0-openjdk-devel
</code></pre><p>The <code>java</code> command should be available.</p>
<pre><code>$ java -version
java version &quot;1.7.0_101&quot;
OpenJDK Runtime Environment (rhel-2.6.6.1.el7_2-x86_64 u101-b00)
OpenJDK 64-Bit Server VM (build 24.95-b01, mixed mode)
</code></pre><h4>PHP</h4><pre><code>$ yum install php
</code></pre><h3>Install Firefox on CentOS</h3><p>I read so many articles on Selnium and CentOS, but this gist saved the day: <a href="https://gist.github.com/textarcana/5855427">https://gist.github.com/textarcana/5855427</a></p>
<pre><code>$ yum -y install firefox Xvfb libXfont Xorg
$ yum -y groupinstall &quot;X Window System&quot; &quot;Desktop&quot; &quot;Fonts&quot; &quot;General Purpose Desktop&quot;
</code></pre><p>Launch an XWindows Virtual Frame Buffer(XVFB) session on display port 99:</p>
<pre><code>$ Xvfb :99 -ac -screen 0 1280x1024x24 &amp;
</code></pre><p>Tell all XWindows applications in this terminal session to use the new Xvfb display port:</p>
<pre><code>$ export DISPLAY=:99
</code></pre><h3>Download Selenium Server</h3><p>You&#39;re looking for the Selenium server as <code>selenium-server-standalone-#.jar</code> provided here: <a href="http://selenium-release.storage.googleapis.com/index.html">http://selenium-release.storage.googleapis.com/index.html</a>. I&#39;m using <code>selenium-server-standalone-2.53.0.jar</code>.</p>
<h4>Run it as a background process</h4><p>The importance is <code>nuhup</code> and <code>&amp;</code> to run a process in the background on Linux.</p>
<pre><code>nohup java -jar selenium-server-standalone-2.53.0.jar &amp;
</code></pre><h4>Kill the process</h4><p>TIL: If you want to kill the process, use <code>ps</code> to view running processes.</p>
<pre><code>$ ps
  PID TTY          TIME CMD
 5260 pts/1    00:00:00 bash
 5527 pts/1    00:00:00 java
 5550 pts/1    00:00:00 ps
</code></pre><p>And to terminate:</p>
<pre><code>$ kill 5527
</code></pre><h3>Run a test</h3><p>Make sure libraries have been moved over or installed properly to the server. </p>
<pre><code>$ wget https://raw.githubusercontent.com/facebook/php-webdriver/community/example.php
$ php example.php
</code></pre><p>Finally. I can begin running my test cases.</p>
]]></description>
          <pubDate>Sat May 07 2016 19:00:00 GMT-0500 (CDT)</pubDate>
          <link>http://chandrewz.github.io/blog/[object Object]</link>
          <guid isPermaLink="true">http://chandrewz.github.io/blog/[object Object]</guid>
        </item>
      
    
       
        <item>
          <title>Start a blog with Harp</title>
          <description><![CDATA[<p>I had <a href="http://chandrewz.github.io">chandrewz.github.io</a> up for a while with nothing on it. I decided to put up a blog and I&#39;d write down things I google at work and TIL&#39;s. I was considering Pelican before stumbling upon Harp.js. I found Harp&#39;s installation process much easier and that converted me.</p>
<h3>Installing Harp (make sure <code>npm</code> is installed)</h3><pre><code class="language-bash">sudo npm install -g harp
</code></pre>
<h3>Initiate a harp project (using Boilerplate)</h3><p>Yeah, you can use <code>harp init</code> by itself, but I wanted something up quickly. I also had my blog repo, so I <code>cd</code>&#39;ed in there. I used the <a href="https://github.com/kennethormandy/hb-simurai">Simurai</a> boilerplate.</p>
<p>For a full list of templates, see: <a href="https://github.com/harp-boilerplates/registry/blob/master/index.json">https://github.com/harp-boilerplates/registry/blob/master/index.json</a></p>
<pre><code class="language-bash">harp init --boilerplate kennethormandy/hb-simurai _harp
</code></pre>
<p>That imports all the boilerplate files into the <code>_harp</code> directory.</p>
<h3>Compile &amp; Serve</h3><p>From my project directory:</p>
<pre><code class="language-bash">harp compile _harp ./
harp server
</code></pre>
<p>I&#39;m compiling the <code>_harp</code> directory and generating the static content into the root directory of my project. The generated website can be accessed on <a href="http://localhost:9000">localhost:9000</a>.</p>
<h3>Push it live</h3><pre><code class="language-bash">git push origin master
</code></pre>
<p>And we&#39;re done.</p>
]]></description>
          <pubDate>Fri May 06 2016 19:00:00 GMT-0500 (CDT)</pubDate>
          <link>http://chandrewz.github.io/blog/[object Object]</link>
          <guid isPermaLink="true">http://chandrewz.github.io/blog/[object Object]</guid>
        </item>
      
    
       
        <item>
          <title>Heyo World</title>
          <description><![CDATA[<p>Hi. Letâ€™s make a simple blog with <a href="http://harpjs.com">Harp</a>.</p>
]]></description>
          <pubDate>Thu May 05 2016 19:00:00 GMT-0500 (CDT)</pubDate>
          <link>http://chandrewz.github.io/blog/[object Object]</link>
          <guid isPermaLink="true">http://chandrewz.github.io/blog/[object Object]</guid>
        </item>
      
    
  </channel>
</rss>
